This page shows how to use jcosmo to calculate the activity coefficient of a binary mixture.

== Necessary procedure ==
1) Creat variable COSMOSACDataBase:
     {{{_COSMOSACDataBase db = COSMOSACDataBase.getInstance( );_}}}
2) Select two componds of the database:
     _COSMOSACCompound c = db.getComp("compondName");_
3) Get of the database the "volume occupied by the molecular":
     _cavityVolume = c.Vcosmo;_
4) Get of the database the sigma profiles:
     _sigma = c.sigma;_
5) Creat variable COSMOSAC:
     _COSMOSAC cosmosac = new COSMOSAC( );_
6) Set parameters of calculation:
     _cosmosac.setParameters(cavityVolume, c1.charge, sigma);_
7) Set temperature (Kelvin):
     _cosmosac.setTemperature(T);_
8) Set composition:
     _cosmosac.setComposition(z);_
9) Use vector to get ln(gamma):
     _cosmosac.activityCoefficient(lnGamma);_

== Example Code ==

This is the simplest code:
{{{
COSMOSACDataBase db = COSMOSACDataBase.getInstance();
COSMOSACCompound c1 = db.getComp("water");
COSMOSACCompound c2 = db.getComp("ethanol");

double[] cavityVolume = new double[2];
cavityVolume[0] = c1.Vcosmo;
cavityVolume[1] = c2.Vcosmo;

double[][] sigma = new double[2][];
sigma[0] = c1.sigma;
sigma[1] = c2.sigma;

COSMOSAC cosmosac = new COSMOSAC();
cosmosac.setParameters(cavityVolume, c1.charge, sigma);
cosmosac.setTemperature(273.15); // T em Kelvin

double[] z = new double[2];
double[] lnGamma = new double[2];
z[0] = 0.50;
z[1] = 1 - z[0];

cosmosac.setComposition(z);
cosmosac.activityCoefficient(lnGamma);
}}}