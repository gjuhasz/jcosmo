#summary One-sentence summary of this page.

= Introduction =

This page shows how to use jcosmo to calculate the activity coefficient of a binary mixture.

= Details =

Necessary procedure:
  # Creat variable COSMOSACDataBase: _COSMOSACDataBase db = COSMOSACDataBase.getInstance( );_
  # Select two componds of the database: _COSMOSACCompound c = db.getComp("compondName");_
  # Get of the database the "volume occupied by the molecular": _cavityVolume = c.Vcosmo;_
  # Get of the database the sigma profiles: _sigma = c.sigma;_
  # Creat variable COSMOSAC: _COSMOSAC cosmosac = new COSMOSAC( );_
  # Set parameters of calculation: _cosmosac.setParameters(cavityVolume, c1.charge, sigma);_
  # Set temperature (Kelvin): _cosmosac.setTemperature(T);_
  # Set composition: _cosmosac.setComposition(z);_
  # Use vector to get ln(gamma): _cosmosac.activityCoefficient(lnGamma);_

= Example Code = 

This is the simplest code:

_COSMOSACDataBase db = COSMOSACDataBase.getInstance( );

_COSMOSACCompound c1 = db.getComp("water");

_COSMOSACCompound c2 = db.getComp("ethanol");

_double[ ] cavityVolume = new double[ 2 ];

_cavityVolume[ 0 ] = c1.Vcosmo;

_cavityVolume[ 1 ] = c2.Vcosmo;

_double[ ][ ] sigma = new double[ 2 ][ ];

_sigma[ 0 ] = c1.sigma;

_sigma[ 1 ] = c2.sigma;

_COSMOSAC cosmosac = new COSMOSAC( );

_cosmosac.setParameters(cavityVolume, c1.charge, sigma);

_cosmosac.setTemperature(273.15); // T em Kelvin

_double[ ] z = new double[ 2 ];

_double[ ] lnGamma = new double[ 2 ];

_z[0] = 0.00;

_z[1] = 1-z[0];

_cosmosac.setComposition(z);

_cosmosac.activityCoefficient(lnGamma);_